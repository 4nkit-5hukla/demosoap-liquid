{% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
<header>
  <div class="top-header">
    <div class="container-fluid">
      <div class="list-wrapper">
        <div class="flex-list">
          {{ section.settings.top_ticker }}
        </div>
      </div>
    </div>
  </div>
  <div class="bottom-header">
    <div class="container-fluid">
      <div class="header-inner">
        <a href="{{ routes.root_url }}" class="logo" aria-current="page">
          {%- if section.settings.logo != blank -%}
            {%- assign logo_alt = section.settings.logo.alt | default: shop.name | escape -%}
            {{ section.settings.logo | image_url: width: 60 | image_tag:
              class: 'logo-img d-none d-lg-block',
              height: 62,
              width: 60,
              alt: logo_alt
            }}
            {{ section.settings.logo | image_url: width: 48 | image_tag:
              class: 'logo-img d-lg-none',
              height: 50,
              width: 48,
              alt: logo_alt
            }}
            {%- else -%}
              <img src="{{ 'demosoap.png' | asset_img_url: width: 60 }}" alt="Logo" width="60" height="62" loading="lazy" class="logo-img d-none d-lg-block" />
              <img src="{{ 'demosoap.png' | asset_img_url: width: 48 }}" alt="Logo" width="48" height="50" loading="lazy" class="logo-img d-lg-none" />
            {%- endif -%}
        </a>
        <div class="navigation">
          {%- if section.settings.menu != blank -%}
            <div class="left-nav">
              <button type="button" class="mega-toggle d-lg-none" aria-label="Open Menu"></button>
              <ul class="menu-wrapper d-none d-lg-flex" role="list">
                <li class="menu-item">
                  <button class="toggle-drop-menu">{{ 'Shop' | escape }}</button>
                </li>
                {%- for link in section.settings.menu.links -%}
                  <li class="menu-item">
                    <a class="link" href="{{ link.url }}" focus-inset"{% if link.current %} aria-current="page"{% endif %}>{{ link.title | escape }}</a>
                  </li>
                {%- endfor -%}
              </ul>
            </div>
          {%- endif -%}
          <div class="right-nav">
            <ul class="menu-wrapper">
              <li class="menu-item">
                <button id="search-btn" type="button" aria-label="Search"><i class="gsi gs-search-d"></i></button>
              </li>
              <li class="menu-item">
                <a href="{{ routes.account_url }}"><span>Account</span></a>
              </li>
              <li class="menu-item">
                <button class="toggle-cart">
                  <span class="label">Cart</span>
                  <span class="quantity">0</span>
                </button>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div id="flying-cart-bg" class="background-overlay d-none" aria-label="Cart Background" role="button" tabindex="-10"></div>
  <div class="flying-cart">
    <div class="wrapper">
      <div class="cart-title">
        <h4 class="title">SHOPPING CART</h4>
        <button id="cart-close" class="btn-dismiss" aria-label="Close Cart"></button>
      </div>
      <form action="/cart" method="post" class="cart-content">
      </form>
    </div>
  </div>
  <div id="search-bg" class="background-overlay d-none" aria-label="Search Background" role="button" tabindex="-10"></div>
  <form id="search" class="search-box d-none" action="{{ routes.search_url }}" method="get" role="search">
    <input class="search-input" type="search" name="q" value="" required="" placeholder="{{ 'Search for Products' }}" />
    <input type="hidden" name="type" value="product" />
    <input type="hidden" name="options[prefix]" value="last" />
    <button class="btn-search" type="submit" aria-label="{{ 'Search' }}">
      <i class="gsi gs-search-d"></i>
    </button>
  </form>
  <div id="mega-menu" class="mega-menu">
    <div class="container-fluid">
      <div class="menu-wrapper">
        <button class="close-menu d-lg-none" aria-label="Close Menu" type="button"></button>
        <div class="menu-area">
          {%- if section.blocks != blank -%}
          <ul class="menu">
            {%- for block in section.blocks -%}
              <li class="item">
                <a class="link" href="{{ block.settings.item_link }}" data-image="{{ block.settings.item_image | image_url: width: 500 }}">{{ block.settings.item_label }}</a>
              </li>
            {%- endfor -%}
          </ul>
          {%- endif -%}
        </div>
        <div class="preview-area d-none d-lg-flex"></div>
      </div>
    </div>
  </div>
</header>

{% javascript %}

(function ($) {
  $(document).ready(function () {
    const flyingCart = $('.flying-cart')
    const cartBg = $('#flying-cart-bg')
    const toggleCart = $('.toggle-cart')
    const toggleCartQnty = toggleCart.find('.quantity')
    const cartClose = $('#cart-close')
    const add2Cart = $('#add2cart')
    const cartContent = flyingCart.find('.cart-content')

    const fetchCart = (addNewItem = false) => {
      cartContent.html('')
      $.ajax({
        type: 'GET',
        url: '/cart.js',
        dataType: 'json',
        success: (data) => {
          if(data.item_count === 0){
            const cartEmptyMessage = $("<p />", { class: "message"}).text("No products in the cart.");
            const cartReturnBtn = $("<a />", { class: "btn btn-demo-default", href: "/collections/all" }).text("Return To Shop");
            const cartReturnDiv = $("<div />", { class: "cart-return" }).append(cartReturnBtn);
            const cartEmptyDiv = $("<div />", { class: "cart-empty" }).append(cartEmptyMessage).append(cartReturnDiv);
            cartContent.append(cartEmptyDiv)
          } else {
            toggleCartQnty.text(data.item_count)
            const cartList = $("<ul />", { class: "cart-list" })
            data.items.forEach((item) => {
              const itemImgTag = $("<img />", { alt: `variant-1`, src: item.image, loading: "lazy" })
              const itemImage = $("<div />", { class: "item-image" }).append(itemImgTag)
              const itemName = $("<div />", { class: "item-name" }).text(item.title)
              const itemQty = $("<span />", { class: "item-qty" }).text(`${item.quantity}x`)
              const itemMoney = $("<strong />", { class: "money" }).text(Intl.NumberFormat('en-CA', { currency: data.currency, minimumFractionDigits: 2, style: 'currency' }).format(parseFloat(item.price / 100)))
              const itemAmt = $("<span />", { class: "item-amount" }).append(itemQty).append(itemMoney)
              const itemContent = $("<div />", { class: "item-content" }).append(itemName).append(itemAmt)
              const cartItem = $("<li />", { class: "cart-item" }).append(itemImage).append(itemContent)
              cartList.append(cartItem)
            })
            const subTotal = $("<span />").text('Subtotal')
            const totlaMoney = $("<strong />", { class: "money" }).text(Intl.NumberFormat('en-CA', { currency: data.currency, minimumFractionDigits: 2, style: 'currency' }).format(parseFloat(data.total_price / 100)))
            const cartTotal = $("<div />", { class: "cart-total" }).append(subTotal).append(totlaMoney)
            const cartRule = $("<hr />", { class: "cart-rule" })
            const viewCart = $("<a />", { class: "btn btn-demo-default", href: "/cart/" }).text('View cart')
            const checkOut = $("<button />", { class: "btn btn-demo-primary", type: "submit", name: "checkout", value: "Checkout" }).text('Checkout')
            const cartActions = $("<div />", { class: "cart-actions" }).append(viewCart).append(checkOut)
            const cartMeta = $("<div />", { class: "cart-meta" }).append(cartRule).append(cartTotal).append(cartActions)
            cartContent.append(cartList).append(cartMeta)
            addNewItem && toggleCart.click()
          }
        },
        error: (error) => {
          console.log(error)
        }
      })
    }

    fetchCart()

    toggleCart.click(function () {
      cartBg.removeClass('d-none')
      flyingCart.addClass('show')
    })
    cartBg.click(function () {
      flyingCart.removeClass('show')
      cartBg.addClass('d-none')
    })
    cartClose.click(function () {
      flyingCart.removeClass('show')
      cartBg.addClass('d-none')
    })
    add2Cart.click(function () {
      const current = $(this)
      const variantId = current.data('variant')
      const quantity = current.data('quantity')
      const items = [
        {
          id: variantId,
          quantity: quantity
        }
      ]
      $.ajax({
        type: 'POST',
        url: '/cart/add.js',
        dataType: 'json',
        data: { items },
        success: (data) => {
          fetchCart(true)
        },
        error: (error)=> {
          console.log(error)
        }
      });
    })
    $(document).on('click', '.add-to-bag .btn', function () {
      const items = [
        {
          id: parseInt($(this).data('id')),
          quantity: 1
        }
      ]
      $.ajax({
        type: 'POST',
        url: '/cart/add.js',
        dataType: 'json',
        data: { items },
        success: (data) => {
          fetchCart(true)
        },
        error: (error)=> {
          console.log(error)
        }
      });
    })
  })
})(jQuery)

{% endjavascript %}

{% schema %}
{
  "name": "t:sections.header.name",
  "settings": [
    {
      "type": "textarea",
      "id": "top_ticker",
      "label": "Top Ticker",
      "default": "<div class=\"flex-list-item\">Free delivery in Toronto over $45 <a href=\"/delivery-range/\" class=\"flexlist-link\">[Learn More]</a></div><div class=\"flex-list-item\">Curbside pick-up available</div><div class=\"flex-list-item\">Shipping all over Canada & the US</div>"
    },
    {
      "type": "image_picker",
      "id": "logo",
      "label": "t:sections.header.settings.logo.label"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    }
  ],
  "blocks": [
    {
      "type": "mega_item",
      "name": "Mega Item",
      "settings": [
        {
          "type": "text",
          "id": "item_label",
          "label": "Item Label"
        },
        {
          "type": "url",
          "id": "item_link",
          "label": "Item Link"
        },
        {
          "type": "image_picker",
          "id": "item_image",
          "label": "Item Image"
        }
      ]
    }
  ]
}
{% endschema %}
